find_package (OpenFHE QUIET)
if (OpenFHE_FOUND)
	message (STATUS "Build FHErtlib with OpenFHE support")
else ()
	message (WARNING "OpenFHE library not found, no OpenFHE support in FHErtlib")
	return ()
endif ()

file (GLOB_RECURSE RT_OPENFHE_SRC_FILES CONFIGURE_DEPENDS src/*.cxx)

set (RT_OPENFHE_INCLUDE_DIRS "")
list (APPEND RT_OPENFHE_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/include")
list (APPEND RT_OPENFHE_INCLUDE_DIRS "${OpenFHE_INCLUDE}")
list (APPEND RT_OPENFHE_INCLUDE_DIRS "${OpenFHE_INCLUDE}/binfhe")
list (APPEND RT_OPENFHE_INCLUDE_DIRS "${OpenFHE_INCLUDE}/core")
list (APPEND RT_OPENFHE_INCLUDE_DIRS "${OpenFHE_INCLUDE}/pke")
include_directories (${RT_OPENFHE_INCLUDE_DIRS})
set (RT_OPENFHE_INCLUDE_DIRS "${RT_OPENFHE_INCLUDE_DIRS}" CACHE INTERNAL "")

add_library (fhert_openfhe_obj OBJECT ${RT_OPENFHE_SRC_FILES})
set_property (TARGET fhert_openfhe_obj PROPERTY POSITION_INDEPENDENT_CODE 1)

if (BUILD_STATIC)
	add_library (FHErt_openfhe STATIC $<TARGET_OBJECTS:fhert_openfhe_obj>)
	set_property (TARGET FHErt_openfhe PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/rtlib/lib)
	install (TARGETS FHErt_openfhe EXPORT FHETargets DESTINATION rtlib/lib)
endif ()

add_custom_target (fhert_openfhe_all)

if (BUILD_STATIC)
	set (FHERT_OPENFHE_LIB ${FHERT_OPENFHE_LIB} PUBLIC FHErt_openfhe ${OpenFHE_LIBRARIES} FHErt_common)
	add_dependencies (fhert_openfhe_all FHErt_openfhe)
endif()

set (FHERT_OPENFHE_UTAPP "")
if (BUILD_UNITTEST)
	file (GLOB FHERT_OPENFHE_UNITTEST_SRC_FILES CONFIGURE_DEPENDS unittest/*.cxx)
	set (FHERT_OPENFHE_UNITTEST_SRC_FILES ${FHERT_OPENFHE_UNITTEST_SRC_FILES})
	add_executable (ut_fhert_openfhe ${FHERT_OPENFHE_UNITTEST_SRC_FILES} ${UNITTESTMAIN})
	set_property (TARGET ut_fhert_openfhe PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/unittest)
	target_link_libraries (ut_fhert_openfhe ${FHERT_OPENFHE_LIB} ${FHE_UTLIBS} ${MATH_LIBS})
	set (FHERT_OPENFHE_UTAPP ${FHERT_OPENFHE_UTAPP} ut_fhert_openfhe)

	add_dependencies (fhert_openfhe_all ut_fhert_openfhe)

	add_custom_command (OUTPUT run_fhert_openfhe_utapp WORKING_DIRECTORY ${CMAKE_BINARY_DIR} COMMAND ${CMAKE_BINARY_DIR}/unittest/ut_fhert_openfhe)
	add_custom_target (test_fhert_openfhe_ut DEPENDS ut_fhertlib run_fhert_openfhe_utapp)
	add_test( NAME ut_fhert_openfhe COMMAND ${CMAKE_BINARY_DIR}/unittest/ut_fhert_openfhe)
endif()

set (FHERT_OPENFHE_EGAPP "")
if (FHE_BUILD_EXAMPLE)
	file (GLOB FHERT_OPENFHE_EXAMPLE_SRC_FILES CONFIGURE_DEPENDS example/*.cxx)
	foreach (app ${FHERT_OPENFHE_EXAMPLE_SRC_FILES})
		get_filename_component (exe ${app} NAME_WE)
		add_executable (${exe} ${app})
		set_property (TARGET ${exe} PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/example)
		set (FHERT_OPENFHE_EGAPP ${FHERT_OPENFHE_EGAPP} ${exe})
		target_link_libraries (${exe} ${FHERT_OPENFHE_LIB} ${MATH_LIBS})
		# add_test( NAME ${exe} COMMAND ${CMAKE_BINARY_DIR}/example/${exe})
	endforeach ()

	add_custom_target (fhert_openfhe_example)
	add_dependencies (fhert_openfhe_example ${FHERT_OPENFHE_EGAPP})
	add_dependencies (fhert_openfhe_all fhert_openfhe_example)
endif ()

if (FHE_INSTALL_APP)
	install (TARGETS ${FHERT_OPENFHE_UTAPP} RUNTIME DESTINATION unittest)
	install (TARGETS ${FHERT_OPENFHE_EGAPP} RUNTIME DESTINATION example)
endif ()
