file (GLOB_RECURSE AIRPLUGIN_SRC_FILES CONFIGURE_DEPENDS src/*.cxx)

find_package(Python REQUIRED COMPONENTS Development)
if (Python_FOUND)
message (STATUS "Python_INCLUDE_DIRS         : ${Python_INCLUDE_DIRS}")
message (STATUS "Python_LIBRARIES            : ${Python_LIBRARIES}")	
else()
	message(FATAL_ERROR "Python not found. Please make sure Python is installed.")
endif()

set (AIRPLUGIN_INCLUDE_DIRS "")
list (APPEND AIRPLUGIN_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/include")
list (APPEND AIRPLUGIN_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/include")
list (APPEND AIRPLUGIN_INCLUDE_DIRS "${Python_INCLUDE_DIRS}")
include_directories (${AIRPLUGIN_INCLUDE_DIRS})
set (AIRPLUGIN_INCLUDE_DIRS "${AIRPLUGIN_INCLUDE_DIRS}" CACHE INTERNAL "")

add_library (airplugin_obj OBJECT ${AIRPLUGIN_SRC_FILES})

set_property (TARGET airplugin_obj PROPERTY POSITION_INDEPENDENT_CODE 1)

if (BUILD_STATIC)
	add_library (AIRplugin STATIC $<TARGET_OBJECTS:airplugin_obj>)
	set_property (TARGET AIRplugin PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
	target_link_libraries (AIRplugin ${Python_LIBRARIES})
	install (TARGETS AIRplugin EXPORT AIRTargets DESTINATION lib)
endif ()

add_custom_target (airplugin_all)

if (BUILD_STATIC)
	set (AIRPLUGIN_LIBS ${AIRPLUGIN_LIBS} PUBLIC AIRplugin)
	add_dependencies (airplugin_all AIRplugin)
endif()

set (AIRPLUGIN_UTAPP "")
if (BUILD_UNITTEST)
	file (GLOB AIRPLUGIN_UNITTEST_SRC_FILES CONFIGURE_DEPENDS unittest/*.cxx)
	set (AIRPLUGIN_UNITTEST_SRC_FILES ${AIRPLUGIN_UNITTEST_SRC_FILES})
	add_executable (ut_airplugin ${AIRPLUGIN_UNITTEST_SRC_FILES} ${UNITTESTMAIN})
	set_property (TARGET ut_airplugin PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/unittest)
	target_link_libraries (ut_airplugin ${AIR_UTLIBS})
	set_target_properties (${exe} PROPERTIES COMPILE_FLAGS "-DNDEBUG")
	set (AIRPLUGIN_UTAPP ${AIRPLUGIN_UTAPP} ut_airplugin)

	add_dependencies (airplugin_all ut_airplugin)

	add_custom_command (OUTPUT run_airutil_utapps WORKING_DIRECTORY ${CMAKE_BINARY_DIR} COMMAND ${CMAKE_BINARY_DIR}/unittest/ut_airplugin)
	add_custom_target (test_airplugin_ut DEPENDS ut_airplugin run_airutil_utapps)
	file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/unittest/pybase.py DESTINATION ${CMAKE_BINARY_DIR}/unittest)
	add_test( NAME ut_airplugin COMMAND ${CMAKE_BINARY_DIR}/unittest/ut_airplugin)
endif()

set (AIRPLUGIN_TESTAPP "")
if (AIR_BUILD_TEST)
	file (GLOB AIRPLUGIN_TESTAPP_SRC_FILES CONFIGURE_DEPENDS test/*.cxx)
	foreach (app ${AIRPLUGIN_TESTAPP_SRC_FILES})
		get_filename_component (exe ${app} NAME_WE)
		add_executable (${exe} ${app})
		set_property (TARGET ${exe} PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/test)
		set (AIRPLUGIN_TESTAPP ${AIRPLUGIN_TESTAPP} ${exe})
		target_link_libraries (${exe} ${AIR_LIBS})
		add_test( NAME ${exe} COMMAND ${CMAKE_BINARY_DIR}/test/${exe})
	endforeach ()

	add_custom_target (airplugin_test)
	add_dependencies (airplugin_test ${AIRPLUGIN_TESTAPP})
	add_dependencies (airplugin_all airplugin_test)
endif()

set (AIRPLUGIN_EGAPP "")
if (AIR_BUILD_EXAMPLE)
	file (GLOB AIRPLUGIN_EXAMPLE_SRC_FILES CONFIGURE_DEPENDS example/*.cxx)
	foreach (app ${AIRPLUGIN_EXAMPLE_SRC_FILES})
		get_filename_component (exe ${app} NAME_WE)
		add_executable (${exe} ${app})
		set_property (TARGET ${exe} PROPERTY RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/example)
		set (AIRPLUGIN_EGAPP ${AIRPLUGIN_EGAPP} ${exe})
		target_link_libraries (${exe} ${AIR_LIBS})
		add_test( NAME ${exe} COMMAND ${CMAKE_BINARY_DIR}/example/${exe})
	endforeach ()

	add_custom_target (airplugin_example)
	add_dependencies (airplugin_example ${AIRPLUGIN_EGAPP})
	add_dependencies (airplugin_all airplugin_example)
endif ()

if (AIR_INSTALL_APP)
	install (TARGETS ${AIRPLUGIN_UTAPP} RUNTIME DESTINATION unittest)
	install (TARGETS ${AIRPLUGIN_BMAPP} RUNTIME DESTINATION bench)
	install (TARGETS ${AIRPLUGIN_TESTAPP} RUNTIME DESTINATION test)
	install (TARGETS ${AIRPLUGIN_EGAPP} RUNTIME DESTINATION example)
endif ()